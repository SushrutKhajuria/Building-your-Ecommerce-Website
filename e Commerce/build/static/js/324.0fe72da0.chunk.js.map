{"version":3,"file":"static/js/324.0fe72da0.chunk.js","mappings":"0RAKA,MA+EA,EA/EaA,IAA4B,IAA3B,KAAEC,EAAI,YAAEC,GAAaF,EACjC,MAAM,UAAEG,EAAS,eAAEC,IAAmBC,EAAAA,EAAAA,KAEtC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACN,KAAMA,EAAMO,OAAQN,EAAaO,UAAU,MAAKC,SAAA,EACzDC,EAAAA,EAAAA,KAACJ,EAAAA,EAAUK,OAAM,CAACC,aAAW,EAAAH,UAC3BC,EAAAA,EAAAA,KAACJ,EAAAA,EAAUO,MAAK,CAAAJ,SAAC,iBAEnBC,EAAAA,EAAAA,KAACJ,EAAAA,EAAUQ,KAAI,CAAAL,SACS,IAArBP,EAAUa,QACTV,EAAAA,EAAAA,MAAA,OAAKW,UAAU,mBAAkBP,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAASlB,EAAYQ,SAAC,0BAKlDJ,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAAX,SAAA,EACEJ,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAAf,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,UACEJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGP,EAAUuB,KAAI,CAACC,EAAMC,KACpBtB,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEJ,EAAAA,EAAAA,MAAA,OAAKW,UAAU,4BAA2BP,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OACEkB,IAAKF,EAAKG,SACVC,IAAKJ,EAAKK,MACVC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,WAGdV,EAAKK,YAGV1B,EAAAA,EAAAA,MAAA,MAAAI,SAAA,CAAI,IAAEiB,EAAKW,UACX3B,EAAAA,EAAAA,KAAA,MAAAD,SAAKiB,EAAKY,YACV5B,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLC,QAAQ,SACRqB,KAAK,KACLpB,QAASA,IAAMhB,EAAewB,GAAOlB,SACtC,eAvBIkB,WA+BftB,EAAAA,EAAAA,MAAA,OAAKW,UAAU,gBAAeP,SAAA,EAC5BJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,CAAI,WAEDP,EAAUsC,QACT,CAACC,EAAOf,IAASe,EAASf,EAAKW,MAAQX,EAAKY,UAC5C,GACAI,QAAQ,OAEZhC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CAACC,QAAQ,UAAUF,UAAU,OAAMP,SAAC,kCAOzC,E,cCxEhB,MAwFA,EAxFiBkC,KACf,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IACnC,UAAEC,EAAS,cAAEC,IAAkB5C,EAAAA,EAAAA,KA6BrC,OACEC,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAAX,SAAA,EACEC,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACC,GAAG,OAAOhC,QAAQ,OAAOiC,OAAO,KAAKnC,UAAU,OAAMP,UAC3DJ,EAAAA,EAAAA,MAAC+C,EAAAA,EAAS,CAAA3C,SAAA,EACRC,EAAAA,EAAAA,KAACuC,EAAAA,EAAOI,MAAK,CAACC,KAAK,IAAItC,UAAU,uBAAsBP,SAAC,kBACxDC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAG,CAACvC,UAAU,UAASP,UACtBJ,EAAAA,EAAAA,MAACY,EAAAA,EAAM,CACLC,QAAQ,gBACRC,QAASA,IAAM0B,GAAY,GAC3B7B,UAAU,4BAA2BP,SAAA,EAErCC,EAAAA,EAAAA,KAAC8C,EAAAA,IAAO,CAACxC,UAAU,SAAS,QACtBgC,EAAgB,IAAKtC,EAAAA,EAAAA,KAAA,QAAMM,UAAU,uBAAsBP,SAAEuC,eAM3E3C,EAAAA,EAAAA,MAAC+C,EAAAA,EAAS,CAACpC,UAAU,OAAMP,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,wBAAuBP,SAAC,WACtCC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5C,UAAU,MAAKP,SA/C3B,CAClB,CACEoD,GAAI,EACJ9B,MAAO,SACPM,MAAO,IACPR,SAAU,wDAEZ,CACEgC,GAAI,EACJ9B,MAAO,yBACPM,MAAO,GACPR,SAAU,wDAEZ,CACEgC,GAAI,EACJ9B,MAAO,0BACPM,MAAO,GACPR,SAAU,wDAEZ,CACEgC,GAAI,EACJ9B,MAAO,aACPM,MAAO,IACPR,SAAU,yDAyBOJ,KAAKqC,IAChBpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAG,CAAkB/C,UAAU,SAAQP,UACtCC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,GAAE,aAAAC,OAAeJ,EAAQD,IAAM7C,UAAU,6BAA4BP,UACzEJ,EAAAA,EAAAA,MAAC8D,EAAAA,EAAI,CAACnD,UAAU,2BAA0BP,SAAA,EACxCC,EAAAA,EAAAA,KAACyD,EAAAA,EAAKC,IAAG,CACPlD,QAAQ,MACRU,IAAKkC,EAAQjC,SACbG,MAAO,CAAEE,OAAQ,QAASE,UAAW,QAASiC,OAAQ,WACtDvC,IAAKgC,EAAQ/B,SAEf1B,EAAAA,EAAAA,MAAC8D,EAAAA,EAAKrD,KAAI,CAACE,UAAU,cAAaP,SAAA,EAChCC,EAAAA,EAAAA,KAACyD,EAAAA,EAAKtD,MAAK,CAACG,UAAU,OAAMP,SAAEqD,EAAQ/B,SACtC1B,EAAAA,EAAAA,MAAC8D,EAAAA,EAAKG,KAAI,CAACtD,UAAU,OAAMP,SAAA,CAAC,IAAEqD,EAAQzB,UACtC3B,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLC,QAAQ,UACRF,UAAU,yCACVG,QAAUoD,IACRA,EAAEC,iBACFzB,EAAUe,EAAQ,EAClBrD,SACH,yBAnBCqD,EAAQD,YA8BxBnD,EAAAA,EAAAA,KAAC+D,EAAI,CAACzE,KAAM4C,EAAU3C,YAAaA,IAAM4C,GAAY,OACpD,C","sources":["components/Cart.js","components/Products.js"],"sourcesContent":["import React from 'react';\r\nimport { Offcanvas, Table, Button } from 'react-bootstrap';\r\nimport { useCart } from '../context/CartContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Cart = ({ show, handleClose }) => {\r\n  const { cartItems, removeFromCart } = useCart();\r\n\r\n  return (\r\n    <Offcanvas show={show} onHide={handleClose} placement=\"end\">\r\n      <Offcanvas.Header closeButton>\r\n        <Offcanvas.Title>Your Cart</Offcanvas.Title>\r\n      </Offcanvas.Header>\r\n      <Offcanvas.Body>\r\n        {cartItems.length === 0 ? (\r\n          <div className=\"text-center py-4\">\r\n            <h5>Your cart is empty</h5>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Continue Shopping\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>Item</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {cartItems.map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <img \r\n                          src={item.imageUrl} \r\n                          alt={item.title} \r\n                          style={{ \r\n                            width: '50px', \r\n                            height: '50px', \r\n                            marginRight: '10px',\r\n                            objectFit: 'cover'\r\n                          }}\r\n                        />\r\n                        {item.title}\r\n                      </div>\r\n                    </td>\r\n                    <td>${item.price}</td>\r\n                    <td>{item.quantity}</td>\r\n                    <td>\r\n                      <Button \r\n                        variant=\"danger\" \r\n                        size=\"sm\"\r\n                        onClick={() => removeFromCart(index)}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n            <div className=\"text-end mt-3\">\r\n              <h5>\r\n                Total: $\r\n                {cartItems.reduce(\r\n                  (total, item) => total + (item.price * item.quantity), \r\n                  0\r\n                ).toFixed(2)}\r\n              </h5>\r\n              <Button variant=\"success\" className=\"mt-2\">\r\n                Proceed to Checkout\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Offcanvas.Body>\r\n    </Offcanvas>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n\r\n//code for E Commerce App from Sharpener","import React, { useState } from 'react';\r\nimport { Container, Row, Col, Card, Button, Nav, Navbar } from 'react-bootstrap';\r\nimport { BsCart3 } from 'react-icons/bs';\r\nimport { useCart } from '../context/CartContext';\r\nimport Cart from './Cart';\r\nimport { Link } from 'react-router-dom'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Products = () => {\r\n  const [showCart, setShowCart] = useState(false);\r\n  const { addToCart, cartItemCount } = useCart();\r\n\r\n  const productsArr = [\r\n    {\r\n      id: 1,\r\n      title: 'Colors',\r\n      price: 100,\r\n      imageUrl: 'https://via.placeholder.com/250x250.png?text=Album+1',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Black and White Colors',\r\n      price: 50,\r\n      imageUrl: 'https://via.placeholder.com/250x250.png?text=Album+2',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Yellow and Black Colors',\r\n      price: 70,\r\n      imageUrl: 'https://via.placeholder.com/250x250.png?text=Album+3',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Blue Color',\r\n      price: 100,\r\n      imageUrl: 'https://via.placeholder.com/250x250.png?text=Album+4',\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"py-3\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\" className=\"mx-auto fs-1 fw-bold\">The Generics</Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Button \r\n              variant=\"outline-light\" \r\n              onClick={() => setShowCart(true)}\r\n              className=\"d-flex align-items-center\"\r\n            >\r\n              <BsCart3 className=\"me-2\" />\r\n              Cart {cartItemCount > 0 && <span className=\"badge bg-danger ms-1\">{cartItemCount}</span>}\r\n            </Button>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Container className=\"my-5\">\r\n        <h2 className=\"text-center mb-5 fs-1\">Music</h2>\r\n        <Row xs={1} md={2} lg={4} className=\"g-4\">\r\n          {productsArr.map((product) => (\r\n            <Col key={product.id} className=\"d-flex\">\r\n              <Link to={`/products/${product.id}`} className=\"text-decoration-none w-100\">\r\n                <Card className=\"w-100 border-0 shadow-sm\">\r\n                  <Card.Img \r\n                    variant=\"top\" \r\n                    src={product.imageUrl} \r\n                    style={{ height: '250px', objectFit: 'cover', cursor: 'pointer' }}\r\n                    alt={product.title}\r\n                  />\r\n                  <Card.Body className=\"text-center\">\r\n                    <Card.Title className=\"fs-5\">{product.title}</Card.Title>\r\n                    <Card.Text className=\"fs-5\">${product.price}</Card.Text>\r\n                    <Button \r\n                      variant=\"warning\" \r\n                      className=\"w-100 text-uppercase fw-bold text-dark\"\r\n                      onClick={(e) => { \r\n                        e.preventDefault(); \r\n                        addToCart(product); \r\n                      }}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n\r\n      <Cart show={showCart} handleClose={() => setShowCart(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["_ref","show","handleClose","cartItems","removeFromCart","useCart","_jsxs","Offcanvas","onHide","placement","children","_jsx","Header","closeButton","Title","Body","length","className","Button","variant","onClick","_Fragment","Table","striped","bordered","hover","map","item","index","src","imageUrl","alt","title","style","width","height","marginRight","objectFit","price","quantity","size","reduce","total","toFixed","Products","showCart","setShowCart","useState","addToCart","cartItemCount","Navbar","bg","expand","Container","Brand","href","Nav","BsCart3","Row","xs","md","lg","id","product","Col","Link","to","concat","Card","Img","cursor","Text","e","preventDefault","Cart"],"sourceRoot":""}